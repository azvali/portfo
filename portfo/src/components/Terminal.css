.terminal-container {
  width: 100%;
  height: 100%;
  border-radius: 8px;
  background-color: var(--background-color);
  display: flex;
  flex-direction: column;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  border: 1px solid var(--border-color);
  overflow: hidden;
}

.terminal-container::after {
  content: ' ';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 0, 0, 0.2) 0px,
    rgba(0, 0, 0, 0.2) 1px,
    transparent 1px,
    transparent 2px
  );
  background-size: 100% 3px;
  pointer-events: none;
  z-index: 9999;
  animation: flicker 0.15s infinite;
}

@keyframes flicker {
  0% { opacity: 0.6; }
  50% { opacity: 0.7; }
  100% { opacity: 0.6; }
}

.terminal-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px;
  background-color: #1e1e1e;
  cursor: move;
  border-bottom: 1px solid var(--border-color);
  user-select: none;
}

.terminal-buttons {
  display: flex;
}

.terminal-button {
  background: transparent;
  border: none;
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ccc;
  cursor: pointer;
}

.terminal-button:hover {
  color: #fff;
}

.terminal-title {
  color: #ccc;
  font-size: 1rem;
}

.terminal-body {
  flex-grow: 1;
  padding: 15px;
  color: #0f0;
  font-family: 'VT323', monospace;
  overflow-y: auto;
  font-size: 1.2em;
  line-height: 1.4;
  white-space: pre-wrap;
  word-break: break-word;
  cursor: text;
}

.terminal-body::-webkit-scrollbar {
  width: 12px;
}

.terminal-body::-webkit-scrollbar-track {
  background: #2c2c2c;
  border-radius: 10px;
}

.terminal-body::-webkit-scrollbar-thumb {
  background-color: #555;
  border-radius: 10px;
  border: 3px solid #2c2c2c;
}

.terminal-body::-webkit-scrollbar-thumb:hover {
  background-color: #777;
}

.terminal-body div {
  color: var(--text-color);
  line-height: 1.5;
  text-shadow: 0 0 5px var(--primary-color);
}

/* Custom styles for react-type-animation cursor */
.terminal-body .custom-type-animation-cursor::before {
  content: 'â–‹';
  animation: blink 1s infinite;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

.prompt-ready {
  margin-top: 1rem;
  opacity: 0;
  animation: fadeIn 0.5s 16s forwards; /* Delay should match end of TypeAnimation */
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

.prompt-ready span {
  color: var(--primary-color);
}

.blinking-cursor {
  animation: blink 1s step-end infinite;
  background-color: var(--primary-color);
  display: inline-block;
  width: 10px; 
  height: 1.2em; 
  margin-left: 2px;
  box-shadow: 0 0 5px var(--primary-color);
}

.prompt {
    color: var(--primary-color);
    margin-right: 0.5rem;
}

.input-line {
    display: flex;
    align-items: center;
}

.input-line .prompt {
    margin-right: 8px;
    flex-shrink: 0;
}

.input-text {
    white-space: pre;
}

.output {
} 